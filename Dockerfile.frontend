# Етап збірки
FROM node:20-slim as build

# Встановлюємо залежності
WORKDIR /app
COPY frontend/package*.json ./
RUN npm ci

# Копіюємо вихідний код
COPY frontend/ ./

# Передаємо змінні Vite як аргументи збірки
ARG VITE_API_URL
ARG VITE_USE_HTTPS
ARG VITE_DOMAIN
ARG VITE_MONOBANK_JAR_URL
ARG VITE_UPDATE_INTERVAL
ARG VITE_NOTIFICATION_THRESHOLD_TARGET_PERCENT
ARG VITE_NOTIFICATION_THRESHOLD_CURRENT_PERCENT
ARG VITE_NOTIFICATION_THRESHOLD_ABSOLUTE
ARG VITE_NOTIFICATION_PERMISSION_CHECK_INTERVAL

# Встановлюємо ENV змінні для збірки
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_USE_HTTPS=${VITE_USE_HTTPS}
ENV VITE_DOMAIN=${VITE_DOMAIN}
ENV VITE_MONOBANK_JAR_URL=${VITE_MONOBANK_JAR_URL}
ENV VITE_UPDATE_INTERVAL=${VITE_UPDATE_INTERVAL}
ENV VITE_NOTIFICATION_THRESHOLD_TARGET_PERCENT=${VITE_NOTIFICATION_THRESHOLD_TARGET_PERCENT}
ENV VITE_NOTIFICATION_THRESHOLD_CURRENT_PERCENT=${VITE_NOTIFICATION_THRESHOLD_CURRENT_PERCENT}
ENV VITE_NOTIFICATION_THRESHOLD_ABSOLUTE=${VITE_NOTIFICATION_THRESHOLD_ABSOLUTE}
ENV VITE_NOTIFICATION_PERMISSION_CHECK_INTERVAL=${VITE_NOTIFICATION_PERMISSION_CHECK_INTERVAL}

# Збираємо проєкт
RUN npm run build

# Етап запуску
FROM nginx:stable-alpine

# Встановлюємо необхідні інструменти
RUN apk add --no-cache openssl

# Створюємо директорію для SSL-сертифікатів
RUN mkdir -p /etc/nginx/ssl

# Копіюємо entrypoint скрипт з вихідного файлу
COPY frontend-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Копіюємо файли фронтенду
COPY --from=build /app/dist /usr/share/nginx/html

# Копіюємо налаштування Nginx
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Встановлюємо точку входу для автоматичного створення сертифікатів
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]

# Запускаємо Nginx у фоновому режимі
CMD ["nginx", "-g", "daemon off;"] 